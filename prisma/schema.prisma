// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PublicFile {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  url  String
  key  String
  size Int
}

model User {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username        String    @unique
  paymentMethodId String?
  token           String?
  userInfo        Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  Setting         Setting[]
  Action          Action[]
}

model Setting {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  telegramEnabled         Boolean  @default(false)
  telegramUsername        String?
  whatsappEnabled         Boolean  @default(false)
  whatsappNumber          String?  @default("")
  whatsappGreetingMessage String?  @default("")
  appendWazzupId          Boolean  @default(true)
  name                    String   @default("")
  appearance              Json     @default("{ \"hello\": \"world\" }")
  hidden                  Boolean  @default(false)
  user                    User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId                  String?  @db.Uuid
  createdAt               DateTime @default(now())
  updatedAt               DateTime @default(now())
  Action                  Action[]

  @@index([name], type: BTree)
}

model Action {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type      String   @default("legacy") @db.VarChar(30)
  name      String   @default("Action")
  query     Json     @default("{ \"query\": [] }")
  enabled   Boolean  @default(true)
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?  @db.Uuid
  setting   Setting? @relation(fields: [settingId], references: [id], onDelete: SetNull)
  settingId String?  @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
